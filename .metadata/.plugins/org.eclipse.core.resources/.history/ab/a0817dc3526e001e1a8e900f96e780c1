package com.demo.Lulu02_MiniProject.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.demo.Lulu02_MiniProject.Entity.Clothes;
import com.demo.Lulu02_MiniProject.Repo.ClothesRepository;

import java.util.List;

@RestController
@RequestMapping("/clothes")
public class ClothesController {
    private final ClothesRepository clothesRepository;

    @Autowired
    public ClothesController(ClothesRepository clothesRepository) {
        this.clothesRepository = clothesRepository;
    }

    // Endpoint to create a new clothes item
    @PostMapping("/create")
    public Clothes createClothes(@RequestBody Clothes clothes) {
        return clothesRepository.save(clothes);
    }

    // Endpoint to get all clothes items
    @GetMapping("/all")
    public List<Clothes> getAllClothes() {
        return clothesRepository.findAll();
    }

    // Endpoint to get clothes item by ID
    @GetMapping("/{id}")
    public Clothes getClothesById(@PathVariable Long id) {
        return clothesRepository.findById(id).orElse(null);
    }

    // Endpoint to update a clothes item
    @PutMapping("/update/{id}")
    public Clothes updateClothes(@PathVariable Long id, @RequestBody Clothes updatedClothes) {
        return clothesRepository.findById(id)
                .map(clothes -> {
                    clothes.setName(updatedClothes.getName());
                    clothes.setCost(updatedClothes.getCost());
                    clothes.setFeedback(updatedClothes.getFeedback());
                    return clothesRepository.save(clothes);
                })
                .orElse(null);
    }

    // Endpoint to delete a clothes item by ID
    @DeleteMapping("/delete/{id}")
    public void deleteClothes(@PathVariable Long id) {
        clothesRepository.deleteById(id);
    }
}
